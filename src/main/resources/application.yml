spring:
  application:
    name: backend
  profiles:
    active: local
  datasource:
    driver-class-name: ${DATASOURCE_DRIVER}
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLE}
      path: ${H2_CONSOLE_PATH}
  jpa:
    database-platform: ${JPA_DATABASE_PLATFORM}
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 50
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:prod.sql
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 35MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: groomcommunity@gmail.com
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  thymeleaf:
    cache

springdoc:
  swagger-ui:
    tags-sorter: alpha
    operations-sorter : method
    doc-expansion : none

goorm:
  community:
    server:
      url: ${SERVER_URL}

logging:
  level:
    org.hibernate.orm.jdbc.bind: trace

token:
  secret:
    key: ${TOKEN_SECRET_KEY}
  access-token:
    expiration-time: ${TOKEN_ACCESS_EXP}
  refresh-token:
    expiration-time: ${TOKEN_REFRESH_EXP}
