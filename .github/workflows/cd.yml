name: Dev Branch Push Check - CD
on:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USER_NAME }}/${{ secrets.DOCKERHUB_DEV_REPOSITORY }}:${{ github.sha }} .

      - name: docker hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker image push
        run: docker push ${{ secrets.DOCKERHUB_USER_NAME }}/${{ secrets.DOCKERHUB_DEV_REPOSITORY }}:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: docker pull
        run: docker pull ${{ secrets.DOCKERHUB_USER_NAME }}/${{ secrets.DOCKERHUB_DEV_REPOSITORY }}:${{ github.sha }}

      - name: Update docker data info
        run: |
          sudo sed -i "/app:/,/ports:/ s|image:.*|image: ${{ secrets.DOCKERHUB_USER_NAME }}/${{ secrets.DOCKERHUB_DEV_REPOSITORY }}:${{ github.sha }}|" ${{ secrets.FILE_NAME }}
      - name: Stop application container
        run: docker-compose stop app

      - name: Remove application container
        run: docker-compose rm -f app

      - name: Create .env file
        run: |
          echo "AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_CREDENTIALS_ACCESS_KEY }}" > .env
          echo "AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_CREDENTIALS_SECRET_KEY }}" >> .env
          echo "AWS_S3_ENDPOINT=${{ secrets.AWS_S3_ENDPOINT }}" >> .env
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> .env
          echo "AWS_STATIC_REGION=${{ secrets.AWS_STATIC_REGION }}" >> .env
          echo "DATASOURCE_DRIVER=${{ secrets.DATASOURCE_DRIVER }}" >> .env
          echo "DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD }}" >> .env
          echo "DATASOURCE_URL=${{ secrets.DATASOURCE_URL }}" >> .env
          echo "DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME }}" >> .env
          echo "HIBERNATE_DDL_AUTO=${{ secrets.HIBERNATE_DDL_AUTO }}" >> .env
          echo "JPA_DATABASE_PLATFORM=${{ secrets.JPA_DATABASE_PLATFORM }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
          echo "SERVER_URL=${{ secrets.SERVER_URL }}" >> .env
          echo "TOKEN_ACCESS_EXP=${{ secrets.TOKEN_ACCESS_EXP }}" >> .env
          echo "TOKEN_REFRESH_EXP=${{ secrets.TOKEN_REFRESH_EXP }}" >> .env
          echo "TOKEN_SECRET_KEY=${{ secrets.TOKEN_SECRET_KEY }}" >> .env
          echo "DATASOURCE_PASSWORD=${{ secrets.DATASOURCE_PASSWORD_DEV }}" >> .env
          echo "DATASOURCE_URL=${{ secrets.DATASOURCE_URL_DEV }}" >> .env
          echo "DATASOURCE_USERNAME=${{ secrets.DATASOURCE_USERNAME_DEV }}" >> .env
          echo "SPRING_PROFILES_ACTIVE=dev" >> .env
          echo "REDIS_HOST=redis" >> .env

      - name: docker app service container start
        run: docker-compose up -d app

      - name: Remove .env file
        run: rm .env

      - name: delete old docker image
        run: docker system prune -f